$media-breakpoints: (
  'xs': 'xs-only',
  'sm': 'sm-and-up',
  'md': 'md-and-up',
  'lg': 'lg-and-up',
  'xl': 'xl-only',
);

.d-grid {
  display: grid;
}

@each $br, $media in $media-breakpoints {
  @include media($media) {
    .d-#{$br}-grid {
      display: grid;
    }
  }
}

.grid-cols-none	{
  grid-template-columns: none;
}

@for $i from 1 through 12 {
  .grid-cols-#{$i} {
    grid-template-columns: repeat($i,minmax(0,1fr));
  }
}

@each $br, $media in $media-breakpoints {
  @include media($media) {
    @for $i from 1 through 12 {
      .grid-cols-#{$br}-#{$i} {
        grid-template-columns: repeat($i,minmax(0,1fr));
      }
    }
  }
}

@for $i from 1 through 6 {
  .grid-rows-#{$i} {
    grid-template-rows: repeat($i, minmax(0, 1fr));
  }
}

@each $br, $media in $media-breakpoints {
  @include media($media) {
    @for $i from 1 through 12 {
      .grid-rows-#{$br}-#{$i} {
        grid-template-rows: repeat($i, minmax(0, 1fr));
      }
    }
  }
}

@for $i from 1 through 12 {
  .col-span-#{$i} {
    grid-column: span $i/span $i;
  }
}

@each $br, $media in $media-breakpoints {
  @include media($media) {
    @for $i from 1 through 12 {
      .col-span-#{$br}-#{$i} {
        grid-column: span $i/span $i;
      }
    }
  }
}

.grid-flow-row	{
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

@each $i, $space in $spacers {
  .gap-#{$i} {
    gap: $space;
  }
}

@each $br, $media in $media-breakpoints {
  @include media($media) {
    @each $i, $space in $spacers {
      .gap-#{$br}-#{$i} {
        gap: $space;
      }
    }
  }
}

